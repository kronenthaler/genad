- http://tablesorter.com (para generacion de reportes)
- http://code.google.com/apis/visualization/
+ Cambiar los componentes de fechas de dojo por el dojo nuevo o por un componente nuevo de jquery.
+ ui.jquery.com: 
	- http://ui.jquery.com/repository/latest/demos/functional/#ui.datepicker
+ Tratar de eliminar dojo del api (si es posible) o actualizarlo
	- http://malsup.com/jquery/form/#code-sample
- Ordenar los campos del list.xsl (ahora es mucho mas facil)
* http://plugins.jquery.com/project/js-menu-toggle-adder
- http://plugins.jquery.com/project/autogrow
* http://plugins.jquery.com/project/filestyle (muy complicado es un truco sobreponiendo un control encima del control y haciendolo transparente)
- http://plugins.jquery.com/project/flexigrid
- agregar un panel para manejar relaciones (n-arias => crear un xsl extra para generar las paginas que manejen la relacion.)

+ Hacer el merge con el esquema sin llamadas ajax.
	+ plantillas xsl
	+ menu.php <- reemplazo del antiguo index.php
	+ index.html <- estatico
	+ top.php <- puede ser estatico
	+ welcome.php <- puede ser estatico

+ Estandarizar el modulo Poll
+ Estandarizar la propiedad sortable.
	+ el campo de ordenamiento se llama _sort
+ Hacer el sortable algo que se pueda realizar sin necesidad de involucrar crear paginas nuevas.
	+ copiar el order.xsl del proyecto del diario.
	+ la pagina de ordenar puede usar el mismo xml que se genera para el listado (pero completo)
	+ se toma solamente el primer primer atributo listable para mostrar.
	
+ copiar el arreglo de controls. (se puede manipular este arreglo para el tema de los permisos)
	+ meter los $this->properties dentro de los controles o viceversa

+ ImageUpload:
	+ eliminar todos los posibles thumbnails [eliminar todos los prefijos y reemplazarlo por un * en la llamada a unlink()]
		
- hacer algo que permita cambiar los idiomas de las palabras basicas. 
	- trabajar con entidades en los xsl puede ser una buena opcion.		
		
- se podria copiar el esquema de CMS como un tipo de forma extra.

+ Campatibilidad con safari:
	- En lineas generales todos los componentes que involucren la llamada a dojo.addOnLoad deben reemplazarse por algun otro mecanismo
	para capturar este evento como por ejemplo: alguna imagen spacer o similar.
	- El imageUpload funciona bien llamandose en modo directo, pero falla al estar detras de una llamada ajax (posiblemente el error
	de arriba solucione el problema).	

- Mejorar el mecanismo de cancelar la generacion.
+ cambiar los controles de fecha de dojo por alguno de jquery
+ revisar los archivos recientes. Eliminar los archivos que no se consigan. No intentar abrirlos.
+ hay un bug en el menu de open recent. (reemplazar el archivo por una pequeÃ±a bd de sqlite)

+ hacer un dialogo que revise todos los archivos que pueden ser sobreescritos y marcar los que se desean sobreescribir. 

+ guardar las configuraciones de los Fields y los Modules.

+ cambiar los toString de + por StringBuffer.append
+ revisar el open recents -> los tabs se vuelven ineditables??, problema de foco

+ validar los fields soportados
	+ en el dialogo de propiedades/new

+ modificar opciones para los field
    + dialogo con un OptionTable

+ instalar modulos al estilo install la nguage.

+ feedback de la generacion:
	+ WARNING DE GENERACION si existen archivos en el directorio destino, y las tablas de BD.
	+ cancelacion de la generacion de codigo.

+ como importar los menues de los modulos y sus respectivos js para el index.html
	+ puede ser language-dependent

+ acomodar los estilos:
	- calendario 
	- timepicker
	- rte

+ hacer controles file e image
	+ Cambiar el esquema de direccionamiento por iframes? 
		+ usar un esquema como el de uploadFE, un iframe que sube ese archivo especificamente, => esperar que se resuelvan los
		  uploads antes de enviar el form
		- revisar bugs 
	* usar el stylish que esta en docs
	- IMPORTANTE: buscar forma de hacer submit del form sin que sea por el form tradicional. (upload.js)
		- forma mas factible es crear un dojo.io.bind() sincrono, porq para ese punto ya se garantizo que se puede enviar.
	- tabla de mimes para verificacion de tipos validas
		- opcion usar una tabla en BD que se cargue en el momento de la conexion, o cuando se cargue el primer
		  objeto upload.
	+ hacer que muestre el link en el caso que la accion sea MOD y el archivo ya exista

+ modulo para el manejo de usuarios y permisologia en la generacion

- archivo de licencias
- DTD o schemas para los archivos de configuracion general, plugin, y del proyecto, van dentro del .jar para evitar que se modifiquen o eliminen facilmente.
- modulo para instalar plugins de funcionalidades.
	- modulo para hacer updates?

- revisar los options de los fields cuando se hace un cambio de lenguaje.
	- guardar los que estaban?
	- copiar los del nuevo?
	- hacer merge? (conservar los anteriores, agregar los nuevos y eliminar los que no existen)
